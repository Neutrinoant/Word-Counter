/*
 * DLinkedListMod.h
 *
 *  Created on: 2016. 1. 9.
 *      Author: Neutrino Ant
 */
#ifndef __D_LINKED_LIST_H__
#define __D_LINKED_LIST_H__

#include "Word.h"

#define TRUE	1
#define FALSE	0

typedef Word * LData;

typedef struct _node
{
	LData data;
	struct _node * next;
} Node;

typedef struct _linkedList
{
	Node * head;
	Node * cur;
	Node * before;
	int numOfData;

	/* 
	 * d1, d2의 위치관계 결정함수.
	 *  1. d1이 더 먼저다?: 음수 반환
	 *  2. d1과 d2가 같다?: 0을 반환
	 *  3. d2가 더 먼저다?: 양수 반환
	 */
	int (*comp)(LData d1, LData d2);
	// 같은 값을 저장시 처리함수 //
	void (*overlap)(LData *pdata);
} LinkedList;


typedef LinkedList List;

void ListInit(List * plist);
void LInsert(List * plist, LData data);  // 중복된 데이터 삽입은 기본적으로 허용.
										 // but, comp함수가 정의되어 정렬가능상태일때
										 // 정렬도중 같은 데이터를 만나게 되면
										 // overlap함수가 정의되어있지 않을때 삽입함
int LFirst(List * plist, LData * pdata);
int LNext(List * plist, LData * pdata);

LData LRemove(List * plist);
int LCount(List * plist);

// 정렬 규칙을 정하는 함수(overlap은 중복데이터 존재시 데이터 조작방법)
void SetSortRule(List * plist, int (*comp)(LData d1, LData d2), void (*overlap)(LData *pdata));

#endif
